name: c910

on:
  push:
 
  schedule:
    - cron: "0 2 * * *"

jobs:
  create-kernel:
    runs-on: 	ubuntu-22.04
    env:
      xuetie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource/1836682/1640771208032
      toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.2.4-20211227.tar.gz
      kernel_branch: devel-5.10
      toolchain_tripe: riscv64-unknown-linux-gnu-
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu build-essential \
                                  libncurses-dev gawk flex bison openssl libssl-dev \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-gcc riscv64-gcc /usr/bin/riscv64-linux-gnu-gcc-12 10
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-g++ riscv64-g++ /usr/bin/riscv64-linux-gnu-g++-12 10

      - name: Compile Kernel && Install
        run: |
              mkdir rootfs && mkdir rootfs/boot
              wget ${xuetie_toolchain}/${toolchain_file_name}
              tar -xvf ${toolchain_file_name} -C /opt

              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.2.4/bin:$PATH"

              git clone -b ${kernel_branch} --depth=1 https://gitee.com/openanolis/riscv-cloud-kernel.git kernel
              pushd kernel
                make CROSS_COMPILE=${toolchain_tripe} ARCH=riscv light_defconfig
                make CROSS_COMPILE=${toolchain_tripe} ARCH=riscv -j$(nproc)
                if [ x"$(cat .config | grep CONFIG_MODULES=y)" = x"CONFIG_MODULES=y" ]; then
                  sudo make CROSS_COMPILE=${toolchain_tripe} ARCH=riscv INSTALL_MOD_PATH=../rootfs/ modules_install -j$(nproc)
                fi
                sudo make CROSS_COMPILE=${toolchain_tripe} ARCH=riscv INSTALL_PATH=../rootfs/boot zinstall -j$(nproc)

                # Install Kernel
                sudo cp -v arch/riscv/boot/Image ../rootfs/boot/
                sudo cp -v arch/riscv/boot/Image.gz ../rootfs/boot/

                # Install DTB
                # sudo cp -v arch/riscv/boot/dts/*.dtb ../rootfs/boot/
              popd
        
      - name: compress
        run: tar -zcvf kernel.tar.gz rootfs

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: kernel.tar.gz
          path: kernel.tar.gz
          retention-days: 10
